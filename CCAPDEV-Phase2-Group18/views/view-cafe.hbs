{{>top-nav}}
<!-- TOP NAV BAR -->

<div class = "cafe-profile-main">
<!-- CAFE INFORMATION -->
    <div class = "cafe-info-container">
        <div class = "cafe-logo"> <!-- CAFE LOGO -->
            <img src = "{{cafe-data.logo}}">
        </div>
        <div class = "cafe-info">
            <div class = "cafe-name">{{cafe-data.cafename}}</div>
                <div class ="cafe-description-container">
                    <div class ="description">{{cafe-data.cafedesc}}</div>
                        <div class="rating">Rating: 
                            {{{generateStarIcons cafe-data.rating}}}
                        </div>
                </div>
        </div>
    </div>
    <div class = "cafe-profile-review-container">
<!-- REVIEWS OF THE CAFE -->
{{#each post-data}}
    {{#if isPromo}}
    {{else}}
            <div class = "review-container" data-post-id="{{postid}}">
                <div class = "view-cafe-default-img">
                    <img src = "{{profpic}}"> 
                </div>
                <div class ="username-review">
                    <div class="username" data-userid="{{authorid}}">{{username}}</div>
                    <div class="review" data-postid="{{ _id }}">{{description}}</div>
                    <div class="like_btn_container">
                        <div class="like-post-rating" id="likebtn">
                            <span class="like-btn material-icons"> thumb_up </span>
                            <span class="like-count" id="like-count">{{upvote}}</span>
                        </div>
                        <div class="like-post-rating">
                            <span class="like-btn material-icons" id="dislikebtn"> thumb_down </span>
                            <span class="like-count" id="dislike-count">{{downvote}}</span>
                        </div>
                    </div>
                </div>
            </div>

<script>
    //For user 
    document.addEventListener('DOMContentLoaded', function () {
        const viewUserButtons = document.querySelectorAll('.username');
            
        viewUserButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                const userId = button.getAttribute('data-userid'); 
                window.location.href = '/view_profile?userId=' + encodeURIComponent(userId);
            });
        });
    });

    //For review
    document.addEventListener('DOMContentLoaded', function () {
        const viewPromoButtons = document.querySelectorAll('.review');
            
        viewPromoButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                const postId = button.getAttribute('data-postid'); 
                window.location.href = '/view_post?postId=' + encodeURIComponent(postId);
            });
        });
    });

    //For like and dislike
    document.querySelectorAll(".review-container").forEach(review => {
        const postId = review.getAttribute("post-id");
        const likeRating = review.querySelector(".like-post-rating");

        review.querySelectorAll(".like-post-rating").forEach(rating => {
            const likeButton = rating.querySelector(".like-btn");
            const count = rating.querySelector(".like-count");

            likeButton.addEventListener("click", async () => {
                if (rating.classList.contains("like-post-rating-selected")) {
                    return;
                }

                count.textContent = Number(count.textContent) + 1;

                review.querySelectorAll(".like-post-rating").forEach(rating => {
                    if (rating.classList.contains("like-post-rating-selected")) {
                        const count = rating.querySelector(".like-count");

                        count.textContent = Math.max(0, Number(count.textContent) - 1);
                        rating.classList.remove("like-post-rating-selected");
                    }
                });

                rating.classList.add("like-post-rating-selected");

                const likeOrDislike = likeRating === rating ? "like" : "dislike";
                const response = await fetch(`/posts/${postId}/${likeOrDislike}`);
                const body = await response.json();
            });
        });
    });
</script>

    {{/if}}
{{/each}}
    </div>

</div>